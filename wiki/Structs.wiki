#summary M3 structs.

= Introduction =

These are the structures found so far in the .m3 files.


= Details =

{{{
// Size = 8 byte / 0x08 byte
// Complete
struct Reference 
{
    /*0x00*/ uint32 nEntries;
    /*0x04*/ uint32 ref;
};

// Size = 16 byte / 0x10 byte
// Incomplete
struct ReferenceEntry 
{ 
    /*0x00*/ char id[4]; 
    /*0x04*/ uint32 offset; 
    /*0x08*/ uint32 nEntries; 
    /*0x0C*/ uint32 d1; // Possibly nReferences;
}; 
// Size = 20 byte / 0x14 byte
// Complete
struct MD33
{ 
    /*0x00*/ char id[4]; 
    /*0x04*/ uint32 ofsRefs; 
    /*0x08*/ uint32 nRefs; 
    /*0x0C*/ Reference MODL; 
};

// Size = 156 byte / 0x9C byte
// Incomplete
struct BONE
{
    /*0x00*/ int32 d1; // Keybone?
    /*0x04*/ Reference name;
    /*0x0C*/ uint32 flags;
    /*0x10*/ int16 parent;
};

// Size = 32 byte / 0x20 byte
// Incomplete
struct DIV
{
    /*0x00*/ Reference U16; // Might be triangles?
    /*0x08*/ Reference REGN;
    /*0x10*/ Reference BAT;
    /*0x18*/ Reference MSEC;
};

// Size = 96 byte/ 0x60 byte
// Incomplete
struct EVNT
{
    /*0x00*/ Reference name;
    /*0x08*/ int16 unk1[4];
    /*0x10*/ float matrix[4][4];
    /*0x50*/ int32 unk2[4];
};

// Size = 16 byte / 0x10 byte
// Incomplete
struct ATT
{
    /*0x00*/ int32 unk;
    /*0x04*/ Reference name;
    /*0x0C*/ int32 bone;
};

// Size = 24 byte / 0x18 byte
// Complete
struct SD
{
    /*0x00*/ Reference timeline;
    /*0x08*/ uint32 flags;
    /*0x0C*/ uint32 length;
    /*0x08*/ Reference data;
};

// Size = 88 byte / 0x58 byte
// Incomplete
struct SEQS
{
    /*0x00*/ int32 d1;
    /*0x04*/ int32 d2;
    /*0x08*/ Reference name;
    /*0x10*/ int32 d3;
    /*0x14*/ int32 length;
    /*0x18*/ int32 d4;
    /*0x1C*/ uint32 flags;
    /*0x20*/ int32 unk[5];
    /*0x34*/ Vec3D extents[2];
    /*0x4C*/ float radius;
    /*0x50*/ int32 d5;
    /*0x54*/ int32 d6;
};

// Size = 140 byte / 0x8C byte
// Incomplete
struct STC
{
    /*0x00*/ Reference name;
    /*0x08*/ uint16 s1;
    /*0x0A*/ uint16 s2;
    /*0x0C*/ uint16 s3;
    /*0x0E*/ uint16 s4;
    /*0x12*/ Reference unk2; // uint32
    /*0x1A*/ Reference unk3; // uint32
    /*0x22*/ uint32 d3;
    /*0x24*/ Reference evt;
    /*0x2C*/ Reference unk4[11]; // Seems to be transformation data
    /*0x84*/ Reference bnds;
};

// Size = 24 byte / 0x18 byte
// Incomplete
struct STS
{
    /*0x00*/ Reference unk1; // uint32
    /*0x08*/ int32 unk[3];
    /*0x14*/ int16 s1;
    /*0x16*/ int16 s2;
};

// Size = 16 byte / 0x10 byte
// Complete
struct STG
{
    /*0x00*/ Reference name;
    /*0x08*/ Reference stcID;
};

// Size = 56 byte / 0x38 byte
// Incomplete
struct BNDS
{
    /*0x00*/ Vec3D extents1[2];
    /*0x18*/ float radius1;
    /*0x1C*/ Vec3D extents2[2];
    /*0x34*/ float radius2;
};

struct VEC2
{
    float x, y;
};

struct VEC3
{
    float x, y, z;
};

struct VEC4
{
    float x, y, z, w;
};

struct QUAT
{
    float, x, y, z, w;
};
}}}