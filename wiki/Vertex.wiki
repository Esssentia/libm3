#summary Vertex defs

= Introduction =

In the .m3 files, the vertex data seems to be contained within a uint8 block.

MODL-> flags defines some vertex stuff:
  * 0x20000 = has vertices
  * 0x40000 = has 1 extra UV coords
  * 0x80000 = has 2 extra UV coords
  * 0x100000 = has 3 extra UV coords

Each UV texture coordinate must be divided by 2046.0 to get its true float value. In 3ds max, the Y-UV coord must be flipped (1 - UV.y) for textures to be displayed on the mesh properly.

= Details =

{{{

struct Vertex32 // 32 byte
{
    Vec3D pos;
    char boneWeight[4];
    char boneIndex[4]; //index in boneLookup of vertex submesh
    char normal[4];  // x, y, z, w (w is the scale)
    uint16 uv[2];
    char tangents[4];
};

struct Vertex36 // 36 byte
{
    Vec3D pos;
    char boneWeight[4];
    char boneIndex[4]; //index in boneLookup of vertex submesh
    char normal[4];  // x, y, z, w (w is the scale)
    uint16 uv1[2];
    uint16 uv2[2];
    char tangents[4];
};

struct Vertex40 // 40 byte
{
    Vec3D pos;
    char boneWeight[4];
    char boneIndex[4]; //index in boneLookup of vertex submesh
    char normal[4];  // x, y, z, w (w is the scale)
    uint16 uv1[2];
    uint16 uv2[2];
    uint16 uv3[2];
    char tangents[4];
};

struct Vertex44 // 44 byte
{
    Vec3D pos;
    char boneWeight[4];
    char boneIndex[4]; //index in boneLookup of vertex submesh
    char normal[4];  // x, y, z, w (w is the scale)
    uint16 uv1[2];
    uint16 uv2[2];
    uint16 uv3[2];
    uint16 uv4[2];
    char tangents[4];
};

}}}

= Extra Information =
== Vertex Weighting ==
Each vertex boneIndex is not an index into the global bone entries found in [MODL] but rather a reference into the bonelookup. However, it's not just an index into the bonelookup entries either. In order to find the correct bone to weight the vertice to, the boneIndex value uses submesh information found in the [DIV#REGN REGN] indBone value to grab the right bone in the bonelookup entries. So in order to calculate the correct boneIndex: 
 # Find which REGN entry the vertex belongs to
 # Add the REGN.indBone to the vertex.boneIndex value
 # Grab the bonelookup value your new index points to
 # Get the bone the bonelookup value refers to